const e=JSON.parse('{"key":"v-1c0f5be9","path":"/toBeBetterJavaer/thread/map.html","title":"并发集合容器ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器","lang":"zh-CN","frontmatter":{"title":"并发集合容器ConcurrentHashMap、阻塞队列和 CopyOnWrite 容器","shortTitle":"Java的并发容器","description":"Java 的并发集合容器提供了在多线程环境中高效访问和操作的数据结构。这些容器通过内部的同步机制实现了线程安全，使得开发者无需显式同步代码就能在并发环境下安全使用。","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,并发集合容器"}]]},"headers":[{"level":2,"title":"并发容器类","slug":"并发容器类","link":"#并发容器类","children":[]},{"level":2,"title":"并发 Map","slug":"并发-map","link":"#并发-map","children":[{"level":3,"title":"ConcurrentMap 接口","slug":"concurrentmap-接口","link":"#concurrentmap-接口","children":[]},{"level":3,"title":"ConcurrentHashMap","slug":"concurrenthashmap","link":"#concurrenthashmap","children":[]},{"level":3,"title":"ConcurrentSkipListMap","slug":"concurrentskiplistmap","link":"#concurrentskiplistmap","children":[]}]},{"level":2,"title":"并发 Queue","slug":"并发-queue","link":"#并发-queue","children":[]},{"level":2,"title":"并发 Set","slug":"并发-set","link":"#并发-set","children":[]},{"level":2,"title":"阻塞队列","slug":"阻塞队列","link":"#阻塞队列","children":[{"level":3,"title":"BlockingQueue 的操作方法","slug":"blockingqueue-的操作方法","link":"#blockingqueue-的操作方法","children":[]},{"level":3,"title":"BlockingQueue 的实现类","slug":"blockingqueue-的实现类","link":"#blockingqueue-的实现类","children":[]}]},{"level":2,"title":"CopyOnWrite 容器","slug":"copyonwrite-容器","link":"#copyonwrite-容器","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{},"filePathRelative":"toBeBetterJavaer/thread/map.md"}');export{e as data};
