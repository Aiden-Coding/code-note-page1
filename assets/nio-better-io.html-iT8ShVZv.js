const e=JSON.parse('{"key":"v-13a55ee3","path":"/toBeBetterJavaer/nio/nio-better-io.html","title":"Java NIO 比传统 IO 强在哪里？","lang":"zh-CN","frontmatter":{"title":"Java NIO 比传统 IO 强在哪里？","shortTitle":"NIO比IO强在哪？","category":["Java核心"],"tag":["Java NIO"],"description":"本篇内容主要讲述了 NIO 和传统 IO 之间的差异。首先，传统 IO 采用阻塞模型，而 NIO 使用非阻塞模型，通过选择器监控多个通道上的 I/O 事件，从而提升性能与可伸缩性。其次，在文件操作方面，传统 IO 依赖字节流或字符流进行文件读写，而 NIO 则利用通道和缓冲区进行操作，性能优势相对较小。最后，在网络传输方面，传统 IO 使用 Socket 和 ServerSocket，而 NIO 提供了 SocketChannel 和 ServerSocketChannel，支持非阻塞网络传输，进一步增强并发处理能力。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"java,nio,io,Java NIO, 传统IO, 非阻塞模式, 缓冲区, 通道, 选择器"}]]},"headers":[{"level":3,"title":"01、NIO 和传统 IO 在操作文件时的差异","slug":"_01、nio-和传统-io-在操作文件时的差异","link":"#_01、nio-和传统-io-在操作文件时的差异","children":[]},{"level":3,"title":"02、NIO 和传统 IO 在网络传输中的差异","slug":"_02、nio-和传统-io-在网络传输中的差异","link":"#_02、nio-和传统-io-在网络传输中的差异","children":[]},{"level":3,"title":"03、小结","slug":"_03、小结","link":"#_03、小结","children":[]}],"git":{},"filePathRelative":"toBeBetterJavaer/nio/nio-better-io.md"}');export{e as data};
