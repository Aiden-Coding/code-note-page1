const l=JSON.parse('{"key":"v-05cc04bc","path":"/JavaYouth/java_concurrency/Javabingfatixi-dierjieduan-suoyutongbu-_1_.html","title":"Java并发体系-第二阶段-锁与同步-[1]","lang":"zh-CN","frontmatter":{"title":"Java并发体系-第二阶段-锁与同步-[1]","tags":["Java并发","原理","源码"],"categories":["Java并发","原理"],"keywords":"Java并发，原理，源码","description":"万字系列长文讲解-Java并发体系-第二阶段,从C++和硬件方面讲解。","cover":"https://npm.elemecdn.com/lql_static@latest/logo/Java_concurrency.png","abbrlink":"230c5bb3","date":"2020-10-06T22:09:58.000Z"},"headers":[{"level":2,"title":"可见性","slug":"可见性","link":"#可见性","children":[{"level":3,"title":"可见性概念","slug":"可见性概念","link":"#可见性概念","children":[]},{"level":3,"title":"可见性演示","slug":"可见性演示","link":"#可见性演示","children":[]}]},{"level":2,"title":"原子性","slug":"原子性","link":"#原子性","children":[{"level":3,"title":"原子性概念","slug":"原子性概念","link":"#原子性概念","children":[]},{"level":3,"title":"原子性演示","slug":"原子性演示","link":"#原子性演示","children":[]}]},{"level":2,"title":"有序性","slug":"有序性","link":"#有序性","children":[{"level":3,"title":"有序性概念","slug":"有序性概念","link":"#有序性概念","children":[]},{"level":3,"title":"有序性演示","slug":"有序性演示","link":"#有序性演示","children":[]}]},{"level":2,"title":"为什么指令重排序可以提高性能？","slug":"为什么指令重排序可以提高性能","link":"#为什么指令重排序可以提高性能","children":[]},{"level":2,"title":"as-if-serial语义","slug":"as-if-serial语义","link":"#as-if-serial语义","children":[]},{"level":2,"title":"计算机结构","slug":"计算机结构","link":"#计算机结构","children":[{"level":3,"title":"计算机结构简介","slug":"计算机结构简介","link":"#计算机结构简介","children":[]},{"level":3,"title":"CPU","slug":"cpu","link":"#cpu","children":[]},{"level":3,"title":"内存","slug":"内存","link":"#内存","children":[]},{"level":3,"title":"缓存","slug":"缓存","link":"#缓存","children":[]}]},{"level":2,"title":"Java内存模型","slug":"java内存模型","link":"#java内存模型","children":[]},{"level":2,"title":"CPU缓存，内存与Java内存模型的关系","slug":"cpu缓存-内存与java内存模型的关系","link":"#cpu缓存-内存与java内存模型的关系","children":[]},{"level":2,"title":"再谈可见性","slug":"再谈可见性","link":"#再谈可见性","children":[]},{"level":2,"title":"什么是happens-before?","slug":"什么是happens-before","link":"#什么是happens-before","children":[]},{"level":2,"title":"天然的happens-before关系","slug":"天然的happens-before关系","link":"#天然的happens-before关系","children":[]},{"level":2,"title":"CPU术语介绍","slug":"cpu术语介绍","link":"#cpu术语介绍","children":[]},{"level":2,"title":"volatile保证可见性原理","slug":"volatile保证可见性原理","link":"#volatile保证可见性原理","children":[]},{"level":2,"title":"volatile禁止指令重排的原理","slug":"volatile禁止指令重排的原理","link":"#volatile禁止指令重排的原理","children":[{"level":3,"title":"保守策略下","slug":"保守策略下","link":"#保守策略下","children":[]},{"level":3,"title":"X86处理器优化","slug":"x86处理器优化","link":"#x86处理器优化","children":[]}]},{"level":2,"title":"volatile的用途","slug":"volatile的用途","link":"#volatile的用途","children":[]}],"git":{},"filePathRelative":"JavaYouth/java_concurrency/Java并发体系-第二阶段-锁与同步-[1].md"}');export{l as data};
