const e=JSON.parse('{"key":"v-ad808ba6","path":"/JavaYouth/netty/Nettyrumen-dierhua.html","title":"Netty入门-第二话","lang":"zh-CN","frontmatter":{"title":"Netty入门-第二话","tags":["Netty"],"categories":["Netty","入门"],"keywords":"Netty","description":"对Netty的架构进行了解析，主要是Reactor设计模式的多种解决方案。同时讲解了Netty的核心模块组件。","cover":"https://npm.elemecdn.com/lql_static@latest/logo/netty_logo.jpg","abbrlink":"f846f3f","date":"2021-04-15T14:21:58.000Z"},"headers":[{"level":2,"title":"原生 NIO 存在的问题","slug":"原生-nio-存在的问题","link":"#原生-nio-存在的问题","children":[]},{"level":2,"title":"Netty 官网说明","slug":"netty-官网说明","link":"#netty-官网说明","children":[]},{"level":2,"title":"Netty 的优点","slug":"netty-的优点","link":"#netty-的优点","children":[]},{"level":2,"title":"Netty 版本说明","slug":"netty-版本说明","link":"#netty-版本说明","children":[]},{"level":2,"title":"线程模型基本介绍","slug":"线程模型基本介绍","link":"#线程模型基本介绍","children":[]},{"level":2,"title":"传统阻塞 I/O 服务模型","slug":"传统阻塞-i-o-服务模型","link":"#传统阻塞-i-o-服务模型","children":[{"level":3,"title":"工作原理图","slug":"工作原理图","link":"#工作原理图","children":[]},{"level":3,"title":"模型特点","slug":"模型特点","link":"#模型特点","children":[]},{"level":3,"title":"问题分析","slug":"问题分析","link":"#问题分析","children":[]}]},{"level":2,"title":"Reactor 模式","slug":"reactor-模式","link":"#reactor-模式","children":[{"level":3,"title":"针对传统阻塞 I/O 服务模型的 2 个缺点，解决方案：","slug":"针对传统阻塞-i-o-服务模型的-2-个缺点-解决方案","link":"#针对传统阻塞-i-o-服务模型的-2-个缺点-解决方案","children":[]},{"level":3,"title":"I/O 复用结合线程池，就是 Reactor 模式基本设计思想，如图","slug":"i-o-复用结合线程池-就是-reactor-模式基本设计思想-如图","link":"#i-o-复用结合线程池-就是-reactor-模式基本设计思想-如图","children":[]},{"level":3,"title":"Reactor 模式中核心组成","slug":"reactor-模式中核心组成","link":"#reactor-模式中核心组成","children":[]},{"level":3,"title":"Reactor 模式分类","slug":"reactor-模式分类","link":"#reactor-模式分类","children":[]}]},{"level":2,"title":"单 Reactor 单线程","slug":"单-reactor-单线程","link":"#单-reactor-单线程","children":[{"level":3,"title":"方案说明","slug":"方案说明","link":"#方案说明","children":[]},{"level":3,"title":"方案优缺点分析","slug":"方案优缺点分析","link":"#方案优缺点分析","children":[]}]},{"level":2,"title":"单 Reactor 多线程","slug":"单-reactor-多线程","link":"#单-reactor-多线程","children":[{"level":3,"title":"方案说明","slug":"方案说明-1","link":"#方案说明-1","children":[]},{"level":3,"title":"方案优缺点分析","slug":"方案优缺点分析-1","link":"#方案优缺点分析-1","children":[]}]},{"level":2,"title":"主从 Reactor 多线程","slug":"主从-reactor-多线程","link":"#主从-reactor-多线程","children":[{"level":3,"title":"工作原理图","slug":"工作原理图-1","link":"#工作原理图-1","children":[]},{"level":3,"title":"Scalable IO in Java 对 Multiple Reactors 的原理图解","slug":"scalable-io-in-java-对-multiple-reactors-的原理图解","link":"#scalable-io-in-java-对-multiple-reactors-的原理图解","children":[]},{"level":3,"title":"方案优缺点说明","slug":"方案优缺点说明","link":"#方案优缺点说明","children":[]}]},{"level":2,"title":"Reactor 模式小结","slug":"reactor-模式小结","link":"#reactor-模式小结","children":[{"level":3,"title":"3 种模式用生活案例来理解","slug":"_3-种模式用生活案例来理解","link":"#_3-种模式用生活案例来理解","children":[]},{"level":3,"title":"Reactor 模式具有如下的优点","slug":"reactor-模式具有如下的优点","link":"#reactor-模式具有如下的优点","children":[]}]},{"level":2,"title":"Netty 模型","slug":"netty-模型","link":"#netty-模型","children":[{"level":3,"title":"工作原理示意图1 - 简单版","slug":"工作原理示意图1-简单版","link":"#工作原理示意图1-简单版","children":[]},{"level":3,"title":"工作原理示意图2 - 进阶版","slug":"工作原理示意图2-进阶版","link":"#工作原理示意图2-进阶版","children":[]},{"level":3,"title":"工作原理示意图3 - 详细版","slug":"工作原理示意图3-详细版","link":"#工作原理示意图3-详细版","children":[]},{"level":3,"title":"Netty 快速入门实例 - TCP 服务","slug":"netty-快速入门实例-tcp-服务","link":"#netty-快速入门实例-tcp-服务","children":[]},{"level":3,"title":"任务队列中的 Task 有 3 种典型使用场景","slug":"任务队列中的-task-有-3-种典型使用场景","link":"#任务队列中的-task-有-3-种典型使用场景","children":[]},{"level":3,"title":"方案再说明","slug":"方案再说明","link":"#方案再说明","children":[]}]},{"level":2,"title":"异步模型","slug":"异步模型","link":"#异步模型","children":[{"level":3,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":3,"title":"Future 说明","slug":"future-说明","link":"#future-说明","children":[]},{"level":3,"title":"工作原理示意图","slug":"工作原理示意图","link":"#工作原理示意图","children":[]},{"level":3,"title":"Future-Listener 机制","slug":"future-listener-机制","link":"#future-listener-机制","children":[]}]},{"level":2,"title":"快速入门实例 - HTTP服务","slug":"快速入门实例-http服务","link":"#快速入门实例-http服务","children":[{"level":3,"title":"TestServer","slug":"testserver","link":"#testserver","children":[]},{"level":3,"title":"TestServerInitializer","slug":"testserverinitializer","link":"#testserverinitializer","children":[]},{"level":3,"title":"TestHttpServerHandler","slug":"testhttpserverhandler","link":"#testhttpserverhandler","children":[]}]},{"level":2,"title":"Bootstrap、ServerBootstrap","slug":"bootstrap、serverbootstrap","link":"#bootstrap、serverbootstrap","children":[]},{"level":2,"title":"Future、ChannelFuture","slug":"future、channelfuture","link":"#future、channelfuture","children":[]},{"level":2,"title":"Channel","slug":"channel","link":"#channel","children":[]},{"level":2,"title":"Selector","slug":"selector","link":"#selector","children":[]},{"level":2,"title":"ChannelHandler 及其实现类","slug":"channelhandler-及其实现类","link":"#channelhandler-及其实现类","children":[]},{"level":2,"title":"Pipeline 和 ChannelPipeline","slug":"pipeline-和-channelpipeline","link":"#pipeline-和-channelpipeline","children":[]},{"level":2,"title":"ChannelHandlerContext","slug":"channelhandlercontext","link":"#channelhandlercontext","children":[]},{"level":2,"title":"ChannelOption","slug":"channeloption","link":"#channeloption","children":[]},{"level":2,"title":"EventLoopGroup 和其实现类 NioEventLoopGroup","slug":"eventloopgroup-和其实现类-nioeventloopgroup","link":"#eventloopgroup-和其实现类-nioeventloopgroup","children":[]},{"level":2,"title":"Unpooled 类","slug":"unpooled-类","link":"#unpooled-类","children":[]},{"level":2,"title":"Netty 应用实例-群聊系统","slug":"netty-应用实例-群聊系统","link":"#netty-应用实例-群聊系统","children":[{"level":3,"title":"GroupChatServer","slug":"groupchatserver","link":"#groupchatserver","children":[]},{"level":3,"title":"GroupChatServerHandler","slug":"groupchatserverhandler","link":"#groupchatserverhandler","children":[]},{"level":3,"title":"GroupChatClient","slug":"groupchatclient","link":"#groupchatclient","children":[]},{"level":3,"title":"GroupChatClientHandler","slug":"groupchatclienthandler","link":"#groupchatclienthandler","children":[]}]},{"level":2,"title":"Netty 心跳检测机制案例","slug":"netty-心跳检测机制案例","link":"#netty-心跳检测机制案例","children":[{"level":3,"title":"MyServer","slug":"myserver","link":"#myserver","children":[]},{"level":3,"title":"MyServerHandler","slug":"myserverhandler","link":"#myserverhandler","children":[]}]},{"level":2,"title":"Netty 通过 WebSocket 编程实现服务器和客户端长连接","slug":"netty-通过-websocket-编程实现服务器和客户端长连接","link":"#netty-通过-websocket-编程实现服务器和客户端长连接","children":[{"level":3,"title":"MyServer","slug":"myserver-1","link":"#myserver-1","children":[]},{"level":3,"title":"MyTextWebSocketFrameHandler","slug":"mytextwebsocketframehandler","link":"#mytextwebsocketframehandler","children":[]},{"level":3,"title":"hello.html","slug":"hello-html","link":"#hello-html","children":[]}]}],"git":{},"filePathRelative":"JavaYouth/netty/Netty入门-第二话.md"}');export{e as data};
