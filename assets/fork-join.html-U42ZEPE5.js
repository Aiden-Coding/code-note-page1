const e=JSON.parse('{"key":"v-5d694ee0","path":"/toBeBetterJavaer/thread/fork-join.html","title":"Fork/Join","lang":"zh-CN","frontmatter":{"title":"Fork/Join","shortTitle":"Fork/Join","description":"Fork/Join 框架是 Java 7 中引入的一个强大的并行执行任务框架，旨在利用多核处理器的能力。该框架是基于\\"分而治之\\"的原理：一个大任务通常可以分解为一些小任务，这些小任务可以进一步分解，直到它们变得足够小而可以并行执行。","category":["Java核心"],"tag":["Java并发编程"],"head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread,ForkJoin,ForkJoinPool,ForkJoinTask"}]]},"headers":[{"level":2,"title":"什么是分治任务模型","slug":"什么是分治任务模型","link":"#什么是分治任务模型","children":[]},{"level":2,"title":"Fork/Join 的使用","slug":"fork-join-的使用","link":"#fork-join-的使用","children":[]},{"level":2,"title":"ForkJoinPool","slug":"forkjoinpool","link":"#forkjoinpool","children":[]},{"level":2,"title":"与ThreadPoolExecutor的比较","slug":"与threadpoolexecutor的比较","link":"#与threadpoolexecutor的比较","children":[]},{"level":2,"title":"模拟 MapReduce 统计单词数量","slug":"模拟-mapreduce-统计单词数量","link":"#模拟-mapreduce-统计单词数量","children":[]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{},"filePathRelative":"toBeBetterJavaer/thread/fork-join.md"}');export{e as data};
