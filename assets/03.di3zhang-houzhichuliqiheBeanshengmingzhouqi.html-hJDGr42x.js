const e=JSON.parse('{"key":"v-7859d924","path":"/JavaYouth/spring-sourcecode-v1/03.di3zhang-houzhichuliqiheBeanshengmingzhouqi.html","title":"Spring源码系列-第3章-后置处理器和Bean生命周期","lang":"zh-CN","frontmatter":{"title":"Spring源码系列-第3章-后置处理器和Bean生命周期","tags":["Spring源码"],"categories":["Spring","源码V1"],"keywords":"Spring，框架，spring源码","description":"前面讲了Bean工厂后置处理器，这一篇开始讲Bean后置处理器","cover":"https://npm.elemecdn.com/lql_static@latest/logo/spring.png","abbrlink":"66c146e7","date":"2022-01-01T00:01:02.000Z"},"headers":[{"level":2,"title":"再来看一下我们的测试类","slug":"再来看一下我们的测试类","link":"#再来看一下我们的测试类","children":[{"level":3,"title":"MyBeanPostProcessor","slug":"mybeanpostprocessor","link":"#mybeanpostprocessor","children":[]},{"level":3,"title":"MyInstantiationAwareBeanPostProcessor","slug":"myinstantiationawarebeanpostprocessor","link":"#myinstantiationawarebeanpostprocessor","children":[]},{"level":3,"title":"MyMergedBeanDefinitionPostProcessor","slug":"mymergedbeandefinitionpostprocessor","link":"#mymergedbeandefinitionpostprocessor","children":[]},{"level":3,"title":"MySmartInstantiationAwareBeanPostProcessor","slug":"mysmartinstantiationawarebeanpostprocessor","link":"#mysmartinstantiationawarebeanpostprocessor","children":[]},{"level":3,"title":"MyBeanFactoryPostProcessor","slug":"mybeanfactorypostprocessor","link":"#mybeanfactorypostprocessor","children":[]},{"level":3,"title":"MyBeanDefinitionRegistryPostProcessor","slug":"mybeandefinitionregistrypostprocessor","link":"#mybeandefinitionregistrypostprocessor","children":[]},{"level":3,"title":"Cat","slug":"cat","link":"#cat","children":[]},{"level":3,"title":"beans2.xml","slug":"beans2-xml","link":"#beans2-xml","children":[]},{"level":3,"title":"MainTest","slug":"maintest","link":"#maintest","children":[]}]},{"level":2,"title":"继续Bean生命周期","slug":"继续bean生命周期","link":"#继续bean生命周期","children":[{"level":3,"title":"流程图-Bean生命周期与后置处理器","slug":"流程图-bean生命周期与后置处理器","link":"#流程图-bean生命周期与后置处理器","children":[]},{"level":3,"title":"BeanPostProcessor-执行无参构造","slug":"beanpostprocessor-执行无参构造","link":"#beanpostprocessor-执行无参构造","children":[]},{"level":3,"title":"InstantiationAwareBeanPostProcessor-执行无参构造","slug":"instantiationawarebeanpostprocessor-执行无参构造","link":"#instantiationawarebeanpostprocessor-执行无参构造","children":[]},{"level":3,"title":"MergedBeanDefinitionPostProcessor-执行无参构造","slug":"mergedbeandefinitionpostprocessor-执行无参构造","link":"#mergedbeandefinitionpostprocessor-执行无参构造","children":[]},{"level":3,"title":"SmartInstantiationAwareBeanPostProcessor-执行无参构造","slug":"smartinstantiationawarebeanpostprocessor-执行无参构造","link":"#smartinstantiationawarebeanpostprocessor-执行无参构造","children":[]},{"level":3,"title":"SmartInstantiationAwareBeanPostProcessor-执行predictBeanType方法","slug":"smartinstantiationawarebeanpostprocessor-执行predictbeantype方法","link":"#smartinstantiationawarebeanpostprocessor-执行predictbeantype方法","children":[]},{"level":3,"title":"InstantiationAwareBeanPostProcessor-执行postProcessBeforeInstantiation方法","slug":"instantiationawarebeanpostprocessor-执行postprocessbeforeinstantiation方法","link":"#instantiationawarebeanpostprocessor-执行postprocessbeforeinstantiation方法","children":[]},{"level":3,"title":"SmartInstantiationAwareBeanPostProcessor-执行determineCandidateConstructors方法","slug":"smartinstantiationawarebeanpostprocessor-执行determinecandidateconstructors方法","link":"#smartinstantiationawarebeanpostprocessor-执行determinecandidateconstructors方法","children":[]},{"level":3,"title":"Cat-执行无参构造方法","slug":"cat-执行无参构造方法","link":"#cat-执行无参构造方法","children":[]},{"level":3,"title":"MergedBeanDefinitionPostProcessor-执行postProcessMergedBeanDefinition方法","slug":"mergedbeandefinitionpostprocessor-执行postprocessmergedbeandefinition方法","link":"#mergedbeandefinitionpostprocessor-执行postprocessmergedbeandefinition方法","children":[]},{"level":3,"title":"InstantiationAwareBeanPostProcessor-执行postProcessAfterInstantiation方法","slug":"instantiationawarebeanpostprocessor-执行postprocessafterinstantiation方法","link":"#instantiationawarebeanpostprocessor-执行postprocessafterinstantiation方法","children":[]},{"level":3,"title":"InstantiationAwareBeanPostProcessor-执行postProcessProperties方法","slug":"instantiationawarebeanpostprocessor-执行postprocessproperties方法","link":"#instantiationawarebeanpostprocessor-执行postprocessproperties方法","children":[]},{"level":3,"title":"Cat-执行setName-@Autowire注入原理","slug":"cat-执行setname-autowire注入原理","link":"#cat-执行setname-autowire注入原理","children":[]},{"level":3,"title":"BeanPostProcessor-执行postProcessBeforeInitialization方法","slug":"beanpostprocessor-执行postprocessbeforeinitialization方法","link":"#beanpostprocessor-执行postprocessbeforeinitialization方法","children":[]},{"level":3,"title":"MergedBeanDefinitionPostProcessor-执行postProcessBeforeInitialization方法","slug":"mergedbeandefinitionpostprocessor-执行postprocessbeforeinitialization方法","link":"#mergedbeandefinitionpostprocessor-执行postprocessbeforeinitialization方法","children":[]},{"level":3,"title":"Cat-调用afterPropertiesSet方法","slug":"cat-调用afterpropertiesset方法","link":"#cat-调用afterpropertiesset方法","children":[]},{"level":3,"title":"BeanPostProcessor-执行postProcessAfterInitialization方法","slug":"beanpostprocessor-执行postprocessafterinitialization方法","link":"#beanpostprocessor-执行postprocessafterinitialization方法","children":[]},{"level":3,"title":"MergedBeanDefinitionPostProcessor-执行postProcessAfterInitialization方法","slug":"mergedbeandefinitionpostprocessor-执行postprocessafterinitialization方法","link":"#mergedbeandefinitionpostprocessor-执行postprocessafterinitialization方法","children":[]}]}],"git":{},"filePathRelative":"JavaYouth/spring-sourcecode-v1/03.第3章-后置处理器和Bean生命周期.md"}');export{e as data};
