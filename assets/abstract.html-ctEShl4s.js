const e=JSON.parse('{"key":"v-429faf3e","path":"/toBeBetterJavaer/oo/abstract.html","title":"Java抽象类，看这一篇就够了，豁然开朗","lang":"zh-CN","frontmatter":{"title":"Java抽象类，看这一篇就够了，豁然开朗","shortTitle":"Java抽象类","description":"Java抽象类是面向对象编程的一种核心概念，它用于声明具有共同特征的类的基本结构。抽象类可以包含抽象方法和具体方法，以实现代码重用和逻辑抽象。本文详细介绍了Java抽象类的定义、使用场景、继承规则和实例，助您更好地理解和应用抽象类。","category":["Java 核心"],"tag":["面向对象编程"],"head":[["meta",{"name":"keywords","content":"Java,Java抽象类,抽象类,抽象方法, 继承"}]]},"headers":[{"level":3,"title":"01、定义抽象类","slug":"_01、定义抽象类","link":"#_01、定义抽象类","children":[]},{"level":3,"title":"02、抽象类的特征","slug":"_02、抽象类的特征","link":"#_02、抽象类的特征","children":[]},{"level":3,"title":"03、抽象类的应用场景","slug":"_03、抽象类的应用场景","link":"#_03、抽象类的应用场景","children":[]},{"level":3,"title":"04、抽象类总结","slug":"_04、抽象类总结","link":"#_04、抽象类总结","children":[]}],"git":{},"filePathRelative":"toBeBetterJavaer/oo/abstract.md"}');export{e as data};
