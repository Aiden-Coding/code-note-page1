const e=JSON.parse('{"key":"v-4a5b70ab","path":"/JavaYouth/spring-sourcecode-v1/06.di6zhang-AOPdehouzhichuliqihedailiduixiangdechuangjian.html","title":"Spring源码系列-第6章-AOP的后置处理器和代理对象的创建","lang":"zh-CN","frontmatter":{"title":"Spring源码系列-第6章-AOP的后置处理器和代理对象的创建","tags":["Spring源码"],"categories":["Spring","源码V1"],"keywords":"Spring，框架，spring源码","description":"AOP源码","cover":"https://npm.elemecdn.com/lql_static@latest/logo/spring.png","abbrlink":"598f6b0d","date":"2022-03-19T12:01:02.000Z"},"headers":[{"level":2,"title":"测试类","slug":"测试类","link":"#测试类","children":[{"level":3,"title":"MainConfig","slug":"mainconfig","link":"#mainconfig","children":[]},{"level":3,"title":"AopOpenConfig","slug":"aopopenconfig","link":"#aopopenconfig","children":[]},{"level":3,"title":"LogAspect","slug":"logaspect","link":"#logaspect","children":[]},{"level":3,"title":"HelloService","slug":"helloservice","link":"#helloservice","children":[]},{"level":3,"title":"AnnotationMainTest","slug":"annotationmaintest","link":"#annotationmaintest","children":[]}]},{"level":2,"title":"如何分析Spring的一个新功能","slug":"如何分析spring的一个新功能","link":"#如何分析spring的一个新功能","children":[]},{"level":2,"title":"分析@EnableXXX找到负责AOP功能的后置处理器","slug":"分析-enablexxx找到负责aop功能的后置处理器","link":"#分析-enablexxx找到负责aop功能的后置处理器","children":[{"level":3,"title":"@EnableAspectJAutoProxy","slug":"enableaspectjautoproxy","link":"#enableaspectjautoproxy","children":[]},{"level":3,"title":"Debug调用栈","slug":"debug调用栈","link":"#debug调用栈","children":[]},{"level":3,"title":"ImportBeanDefinitionRegistrar","slug":"importbeandefinitionregistrar","link":"#importbeandefinitionregistrar","children":[]},{"level":3,"title":"AopConfigUtils#registerAspectJAnnotationAutoProxyCreatorIfNecessary注册切面的基于注解的自动代理创建器","slug":"aopconfigutils-registeraspectjannotationautoproxycreatorifnecessary注册切面的基于注解的自动代理创建器","link":"#aopconfigutils-registeraspectjannotationautoproxycreatorifnecessary注册切面的基于注解的自动代理创建器","children":[]},{"level":3,"title":"AnnotationAwareAspectJAutoProxyCreator后置处理器","slug":"annotationawareaspectjautoproxycreator后置处理器","link":"#annotationawareaspectjautoproxycreator后置处理器","children":[]}]},{"level":2,"title":"AnnotationAwareAspectJAutoProxyCreator在生命周期期间做了什么事？","slug":"annotationawareaspectjautoproxycreator在生命周期期间做了什么事","link":"#annotationawareaspectjautoproxycreator在生命周期期间做了什么事","children":[{"level":3,"title":"怎么分析？","slug":"怎么分析","link":"#怎么分析","children":[]},{"level":3,"title":"负责AOP功能的后置处理器第一次运行准备好数据","slug":"负责aop功能的后置处理器第一次运行准备好数据","link":"#负责aop功能的后置处理器第一次运行准备好数据","children":[]},{"level":3,"title":"createBean()里调用resolveBeforeInstantiation()，AnnotationAwareAspectJAutoProxyCreator后置处理器开始第一次发挥作用","slug":"createbean-里调用resolvebeforeinstantiation-annotationawareaspectjautoproxycreator后置处理器开始第一次发挥作用","link":"#createbean-里调用resolvebeforeinstantiation-annotationawareaspectjautoproxycreator后置处理器开始第一次发挥作用","children":[]},{"level":3,"title":"构建增强器的过程","slug":"构建增强器的过程","link":"#构建增强器的过程","children":[]},{"level":3,"title":"createBean()里调用doCreateBean()，AnnotationAwareAspectJAutoProxyCreator开始第二次发挥作用","slug":"createbean-里调用docreatebean-annotationawareaspectjautoproxycreator开始第二次发挥作用","link":"#createbean-里调用docreatebean-annotationawareaspectjautoproxycreator开始第二次发挥作用","children":[]},{"level":3,"title":"创建HelloService代理对象之前的工作","slug":"创建helloservice代理对象之前的工作","link":"#创建helloservice代理对象之前的工作","children":[]}]}],"git":{},"filePathRelative":"JavaYouth/spring-sourcecode-v1/06.第6章-AOP的后置处理器和代理对象的创建.md"}');export{e as data};
