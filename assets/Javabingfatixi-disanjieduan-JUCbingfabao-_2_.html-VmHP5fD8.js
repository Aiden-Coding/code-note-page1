const l=JSON.parse('{"key":"v-1188f5a8","path":"/JavaYouth/java_concurrency/Javabingfatixi-disanjieduan-JUCbingfabao-_2_.html","title":"Java并发体系-第三阶段-JUC并发包-[2]","lang":"zh-CN","frontmatter":{"title":"Java并发体系-第三阶段-JUC并发包-[2]","tags":["Java并发","原理","源码"],"categories":["Java并发","原理"],"keywords":"Java并发，原理，源码","description":"万字系列长文讲解-Java并发体系-第三阶段-JUC并发包。JUC在高并发编程中使用频率非常高，这里会详细介绍其用法。","cover":"https://npm.elemecdn.com/lql_static@latest/logo/Java_concurrency.png","abbrlink":"70c90e5d","date":"2020-10-10T22:13:58.000Z"},"headers":[{"level":2,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":2,"title":"重复使用的例子","slug":"重复使用的例子","link":"#重复使用的例子","children":[]},{"level":2,"title":"动态减少","slug":"动态减少","link":"#动态减少","children":[]},{"level":2,"title":"常用API","slug":"常用api","link":"#常用api","children":[{"level":3,"title":"注册","slug":"注册","link":"#注册","children":[]},{"level":3,"title":"到达","slug":"到达","link":"#到达","children":[]},{"level":3,"title":"onAdvance()","slug":"onadvance","link":"#onadvance","children":[]},{"level":3,"title":"监控子线程任务","slug":"监控子线程任务","link":"#监控子线程任务","children":[]},{"level":3,"title":"强制关闭","slug":"强制关闭","link":"#强制关闭","children":[]}]},{"level":2,"title":"监控API","slug":"监控api","link":"#监控api","children":[{"level":3,"title":"获取阶段数","slug":"获取阶段数","link":"#获取阶段数","children":[]},{"level":3,"title":"获取注册的数","slug":"获取注册的数","link":"#获取注册的数","children":[]},{"level":3,"title":"获得到达和未到达的数目","slug":"获得到达和未到达的数目","link":"#获得到达和未到达的数目","children":[]}]},{"level":2,"title":"Phaser的分层结构","slug":"phaser的分层结构","link":"#phaser的分层结构","children":[]},{"level":2,"title":"请谈谈对阻塞队列的理解","slug":"请谈谈对阻塞队列的理解","link":"#请谈谈对阻塞队列的理解","children":[]},{"level":2,"title":"种类","slug":"种类","link":"#种类","children":[]},{"level":2,"title":"核心方法","slug":"核心方法","link":"#核心方法","children":[]},{"level":2,"title":"阻塞队列的使用场景","slug":"阻塞队列的使用场景","link":"#阻塞队列的使用场景","children":[{"level":3,"title":"传统版生产者消费者模式 Demo","slug":"传统版生产者消费者模式-demo","link":"#传统版生产者消费者模式-demo","children":[]},{"level":3,"title":"阻塞队列版生产者消费者模式Demo","slug":"阻塞队列版生产者消费者模式demo","link":"#阻塞队列版生产者消费者模式demo","children":[]}]},{"level":2,"title":"主要优点","slug":"主要优点","link":"#主要优点","children":[]},{"level":2,"title":"线程池七大参数入门简介","slug":"线程池七大参数入门简介","link":"#线程池七大参数入门简介","children":[]},{"level":2,"title":"线程池的底层工作流程","slug":"线程池的底层工作流程","link":"#线程池的底层工作流程","children":[]},{"level":2,"title":"线程池的4种拒绝策略","slug":"线程池的4种拒绝策略","link":"#线程池的4种拒绝策略","children":[]},{"level":2,"title":"线程池在实际生产中使用哪一个","slug":"线程池在实际生产中使用哪一个","link":"#线程池在实际生产中使用哪一个","children":[]},{"level":2,"title":"线程池合理配置参数","slug":"线程池合理配置参数","link":"#线程池合理配置参数","children":[]},{"level":2,"title":"线程池的状态","slug":"线程池的状态","link":"#线程池的状态","children":[]},{"level":2,"title":"线程池的关闭","slug":"线程池的关闭","link":"#线程池的关闭","children":[]},{"level":2,"title":"简介","slug":"简介-1","link":"#简介-1","children":[]},{"level":2,"title":"newWorkStealingPool","slug":"newworkstealingpool","link":"#newworkstealingpool","children":[]},{"level":2,"title":"newScheduledThreadPool","slug":"newscheduledthreadpool","link":"#newscheduledthreadpool","children":[]},{"level":2,"title":"Future API","slug":"future-api","link":"#future-api","children":[]},{"level":2,"title":"已经被cancel的任务，是否还能拿到结果？","slug":"已经被cancel的任务-是否还能拿到结果","link":"#已经被cancel的任务-是否还能拿到结果","children":[]},{"level":2,"title":"Future的缺陷以及解决方案","slug":"future的缺陷以及解决方案","link":"#future的缺陷以及解决方案","children":[]},{"level":2,"title":"简介","slug":"简介-2","link":"#简介-2","children":[]},{"level":2,"title":"阻塞和非阻塞获取","slug":"阻塞和非阻塞获取","link":"#阻塞和非阻塞获取","children":[]},{"level":2,"title":"代码解决Future缺陷","slug":"代码解决future缺陷","link":"#代码解决future缺陷","children":[]},{"level":2,"title":"按完成顺序获取结果验证","slug":"按完成顺序获取结果验证","link":"#按完成顺序获取结果验证","children":[]},{"level":2,"title":"为什么会出现CompletableFuture？","slug":"为什么会出现completablefuture","link":"#为什么会出现completablefuture","children":[]},{"level":2,"title":"简介及注意点","slug":"简介及注意点","link":"#简介及注意点","children":[]},{"level":2,"title":"构造CompleableFuture","slug":"构造compleablefuture","link":"#构造compleablefuture","children":[{"level":3,"title":"runAsync","slug":"runasync","link":"#runasync","children":[]},{"level":3,"title":"supplyAsync","slug":"supplyasync","link":"#supplyasync","children":[]},{"level":3,"title":"anyOf","slug":"anyof","link":"#anyof","children":[]},{"level":3,"title":"allOf","slug":"allof","link":"#allof","children":[]}]},{"level":2,"title":"组合方法","slug":"组合方法","link":"#组合方法","children":[{"level":3,"title":"组合两个任务，同时处理两个结果","slug":"组合两个任务-同时处理两个结果","link":"#组合两个任务-同时处理两个结果","children":[]},{"level":3,"title":"组合两个任务，任务完成后做的操作","slug":"组合两个任务-任务完成后做的操作","link":"#组合两个任务-任务完成后做的操作","children":[]},{"level":3,"title":"当两个任务任意一个执行完成后，执行一个操作","slug":"当两个任务任意一个执行完成后-执行一个操作","link":"#当两个任务任意一个执行完成后-执行一个操作","children":[]},{"level":3,"title":"组合两个任务，处理后，返回一个结果","slug":"组合两个任务-处理后-返回一个结果","link":"#组合两个任务-处理后-返回一个结果","children":[]},{"level":3,"title":"第一个任务的输出是第二个任务的输入","slug":"第一个任务的输出是第二个任务的输入","link":"#第一个任务的输出是第二个任务的输入","children":[]}]},{"level":2,"title":"中转方法","slug":"中转方法","link":"#中转方法","children":[{"level":3,"title":"有返回值","slug":"有返回值","link":"#有返回值","children":[]},{"level":3,"title":"无返回值","slug":"无返回值","link":"#无返回值","children":[]}]},{"level":2,"title":"终结方法","slug":"终结方法","link":"#终结方法","children":[]}],"git":{},"filePathRelative":"JavaYouth/java_concurrency/Java并发体系-第三阶段-JUC并发包-[2].md"}');export{l as data};
