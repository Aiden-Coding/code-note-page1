const e=JSON.parse('{"key":"v-a31d672c","path":"/toBeBetterJavaer/thread/wangzhe-thread.html","title":"Java多线程入门","lang":"zh-CN","frontmatter":{"title":"Java多线程入门","shortTitle":"Java多线程入门","category":["Java核心"],"tag":["Java并发编程"],"description":"在王者荣耀的战场上，室友不仅找到了娱乐，还找到了编程的灵感。通过玩游戏，他理解了Java多线程的运行原理。点击进入，了解他的故事和学习经验，也许你也能在游戏中找到学习编程的新方法。","head":[["meta",{"name":"keywords","content":"Java,并发编程,多线程,Thread"}]]},"headers":[{"level":2,"title":"进程和线程","slug":"进程和线程","link":"#进程和线程","children":[]},{"level":2,"title":"创建线程的三种方式","slug":"创建线程的三种方式","link":"#创建线程的三种方式","children":[{"level":3,"title":"继承 Thread 类","slug":"继承-thread-类","link":"#继承-thread-类","children":[]},{"level":3,"title":"实现 Runnable 接口","slug":"实现-runnable-接口","link":"#实现-runnable-接口","children":[]},{"level":3,"title":"实现 Callable 接口","slug":"实现-callable-接口","link":"#实现-callable-接口","children":[]}]},{"level":2,"title":"关于线程的一些疑问","slug":"关于线程的一些疑问","link":"#关于线程的一些疑问","children":[{"level":3,"title":"❤1、为什么要重写 run 方法？","slug":"❤1、为什么要重写-run-方法","link":"#❤1、为什么要重写-run-方法","children":[]},{"level":3,"title":"❤2、run 方法和 start 方法有什么区别？","slug":"❤2、run-方法和-start-方法有什么区别","link":"#❤2、run-方法和-start-方法有什么区别","children":[]}]},{"level":2,"title":"控制线程的其他方法","slug":"控制线程的其他方法","link":"#控制线程的其他方法","children":[{"level":3,"title":"1）sleep()","slug":"_1-sleep","link":"#_1-sleep","children":[]},{"level":3,"title":"2）join()","slug":"_2-join","link":"#_2-join","children":[]},{"level":3,"title":"3）setDaemon()","slug":"_3-setdaemon","link":"#_3-setdaemon","children":[]}]},{"level":2,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{},"filePathRelative":"toBeBetterJavaer/thread/wangzhe-thread.md"}');export{e as data};
