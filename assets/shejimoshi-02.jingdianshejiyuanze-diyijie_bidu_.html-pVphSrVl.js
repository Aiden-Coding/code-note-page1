const l=JSON.parse('{"key":"v-6a1a3e0a","path":"/JavaYouth/design_patterns/shejimoshi-02.jingdianshejiyuanze-diyijie_bidu_.html","title":"设计模式-02.经典设计原则-第一节[必读]","lang":"zh-CN","frontmatter":{"title":"设计模式-02.经典设计原则-第一节[必读]","tags":["设计模式","设计原则"],"categories":["设计模式","02.经典设计原则"],"keywords":"设计模式，经典设计原则","description":"设计模式-经典设计原则，例如：单一职责原则，开闭原则，接口隔离原则等等。","cover":"https://npm.elemecdn.com/lql_static@latest/logo/design_patterns.jpg","abbrlink":"fc1c7619","date":"2021-06-13T19:21:58.000Z"},"headers":[{"level":2,"title":"单一职责原则（SRP）","slug":"单一职责原则-srp","link":"#单一职责原则-srp","children":[{"level":3,"title":"如何理解单一职责原则？","slug":"如何理解单一职责原则","link":"#如何理解单一职责原则","children":[]},{"level":3,"title":"如何判断类的职责是否足够单一？","slug":"如何判断类的职责是否足够单一","link":"#如何判断类的职责是否足够单一","children":[]},{"level":3,"title":"类的职责是否设计得越单一越好？","slug":"类的职责是否设计得越单一越好","link":"#类的职责是否设计得越单一越好","children":[]}]},{"level":2,"title":"开闭原则（OCP）","slug":"开闭原则-ocp","link":"#开闭原则-ocp","children":[{"level":3,"title":"如何理解“对扩展开放、修改关闭”？","slug":"如何理解-对扩展开放、修改关闭","link":"#如何理解-对扩展开放、修改关闭","children":[]},{"level":3,"title":"修改代码就意味着违背开闭原则吗？","slug":"修改代码就意味着违背开闭原则吗","link":"#修改代码就意味着违背开闭原则吗","children":[]},{"level":3,"title":"如何做到“对扩展开放、修改关闭”？","slug":"如何做到-对扩展开放、修改关闭","link":"#如何做到-对扩展开放、修改关闭","children":[]},{"level":3,"title":"如何在项目中灵活应用开闭原则？","slug":"如何在项目中灵活应用开闭原则","link":"#如何在项目中灵活应用开闭原则","children":[]}]},{"level":2,"title":"里式替换原则（LSP）","slug":"里式替换原则-lsp","link":"#里式替换原则-lsp","children":[{"level":3,"title":"如何理解“里式替换原则”？","slug":"如何理解-里式替换原则","link":"#如何理解-里式替换原则","children":[]},{"level":3,"title":"哪些代码明显违背了 LSP？","slug":"哪些代码明显违背了-lsp","link":"#哪些代码明显违背了-lsp","children":[]}]},{"level":2,"title":"接口隔离原则（ISP）","slug":"接口隔离原则-isp","link":"#接口隔离原则-isp","children":[{"level":3,"title":"如何理解“接口隔离原则”？","slug":"如何理解-接口隔离原则","link":"#如何理解-接口隔离原则","children":[]},{"level":3,"title":"把“接口”理解为一组 API 接口集合","slug":"把-接口-理解为一组-api-接口集合","link":"#把-接口-理解为一组-api-接口集合","children":[]},{"level":3,"title":"把“接口”理解为单个 API 接口或函数","slug":"把-接口-理解为单个-api-接口或函数","link":"#把-接口-理解为单个-api-接口或函数","children":[]},{"level":3,"title":"把“接口”理解为 OOP 中的接口概念","slug":"把-接口-理解为-oop-中的接口概念","link":"#把-接口-理解为-oop-中的接口概念","children":[]}]}],"git":{},"filePathRelative":"JavaYouth/design_patterns/设计模式-02.经典设计原则-第一节[必读].md"}');export{l as data};
