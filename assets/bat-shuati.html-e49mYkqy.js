import{_ as e,o as t,c as o,e as p}from"./app-GjP6hEVt.js";const s="/code-note-page1/assets/image-Yp-vbcUt.png",a="/code-note-page1/assets/image-1-bhHDD8xR.png",c="/code-note-page1/assets/image-2-CXJKxO8B.png",l="/code-note-page1/assets/image-3-GaCKH8AH.png",n={},i=p('<blockquote><p>二哥，去年校招前准备算法时，我在 LeetCode 上刷了很多题，但总感觉题虽然刷了很多，解题能力却没怎么提高，怎么解决这种刷题效率低下的问题呢？</p></blockquote><p>这是三个月前一个读者给我的私信，他的困惑让我心有戚戚焉！于是我赶紧问了身边的一些就职于大厂的朋友，他们不约而同地给我推荐了这份刷题笔记。</p><p><img src="'+s+'" alt="Alt text"></p><p>细致地研究了一周后，我感觉发现了宝藏！赶紧发给了这位读者。前天，他回复我了，说：“二哥，你太强了，<strong>这刷题笔记好使啊</strong>。我按照上面提供的方法认真地刷了两个月的时间，惊奇地发现算法能力提高了，刷 LeetCode 上中等难度的题目基本不会被卡住了！”</p><p>听他这么一说，我就有信心了，赶紧给我公众号的读者朋友们分享一下。</p><p>这本笔记的作者在 LeetCode 刷了几百道题，并且将题目分门别类地整理好了。包含了 LeetCode Online Judge 所有题目的答案，所有的代码实现是非常优雅且执行效率极高的。</p><p>不管你使用的编程语言是 Java、C++，还是 Go，都可以学习，适合刷题的同学反复学习。认真地揣摩其中的框架思维，你会发现，这是一本非常用心的刷题类书籍。笔记总共 1200 页，分编程技巧、线性表、字符串、栈队列、树、排序、查找、BFS、DFS、贪心、动态规划等。</p><p><img src="'+a+'" alt="Alt text"></p><p>每个章节都会先讲解框架思维，然后挑选非常典型的十几道 LeetCode 题进行实战讲解。这份笔记不仅排版十分精美，内容也异常充实，每一题都是细致的讲解，有时候还会配上图片，就怕你搞不懂，大大的良心啊！</p><p><img src="'+c+'" alt="Alt text"></p><p><img src="'+l+'" alt="Alt text"></p><p>以前呢，我也很讨厌刷题，觉得这就像古代的八股文一样，又臭又刻板，但互联网的公司都喜欢这么考，因为确实也找不到更好的替代方案，那如果你不准备不去刷 LeetCode 的话，面试必定挂啊！</p><p>经常刷题的读者可能会知道，Beats 100% 是很有难度的：</p><ul><li>代码要言简意赅，一针见血</li><li>算法必须是最优解</li></ul><blockquote><p>笔记版权归原作者（霜神）所有，出处：https://books.halfrost.com/leetcode/</p></blockquote>',15),_=[i];function r(d,g){return t(),o("div",null,_)}const u=e(n,[["render",r],["__file","bat-shuati.html.vue"]]);export{u as default};
