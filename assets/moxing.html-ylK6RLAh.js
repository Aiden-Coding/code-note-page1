const e=JSON.parse('{"key":"v-39fb4859","path":"/toBeBetterJavaer/nio/moxing.html","title":"一文彻底理解Java IO模型（阻塞IO非阻塞IO/IO多路复用）","lang":"zh-CN","frontmatter":{"title":"一文彻底理解Java IO模型（阻塞IO非阻塞IO/IO多路复用）","shortTitle":"Java IO模型","category":["Java核心"],"tag":["Java NIO"],"description":"I/O 模型包括阻塞 I/O、非阻塞 I/O、多路复用、信号驱动和异步 I/O。阻塞 I/O 操作等待数据传输完成，非阻塞 I/O 操作不等待，可执行其他任务。多路复用适用于高并发和高吞吐量场景，信号驱动依赖信号通知应用程序。异步 I/O 由内核负责数据传输，应用程序无需等待。","author":"沉默王二","head":[["meta",{"name":"keywords","content":"IO模型, 阻塞IO, 非阻塞IO, 多路复用, 信号驱动, 异步IO,java,nio"}]]},"headers":[{"level":3,"title":"阻塞 IO 和非阻塞 IO","slug":"阻塞-io-和非阻塞-io","link":"#阻塞-io-和非阻塞-io","children":[]},{"level":3,"title":"内核空间和用户空间","slug":"内核空间和用户空间","link":"#内核空间和用户空间","children":[]},{"level":3,"title":"多路复用、信号驱动、异步 IO","slug":"多路复用、信号驱动、异步-io","link":"#多路复用、信号驱动、异步-io","children":[]},{"level":3,"title":"小结","slug":"小结","link":"#小结","children":[]}],"git":{},"filePathRelative":"toBeBetterJavaer/nio/moxing.md"}');export{e as data};
