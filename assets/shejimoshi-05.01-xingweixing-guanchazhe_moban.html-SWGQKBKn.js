const e=JSON.parse('{"key":"v-18074d38","path":"/JavaYouth/design_patterns/shejimoshi-05.01-xingweixing-guanchazhe_moban.html","title":"设计模式-05.01-行为型-观察者&模板","lang":"zh-CN","frontmatter":{"title":"设计模式-05.01-行为型-观察者&模板","tags":["观察者模式","模板模式"],"categories":["设计模式","05.行为型"],"keywords":"观察者模式，模板模式","description":"观察者模式，模板模式。很常用的两个模式","cover":"https://npm.elemecdn.com/lql_static@latest/logo/design_patterns.jpg","abbrlink":"dd09051e","date":"2021-07-14T16:51:58.000Z"},"headers":[{"level":2,"title":"Demo案例-天气预报","slug":"demo案例-天气预报","link":"#demo案例-天气预报","children":[{"level":3,"title":"方案一","slug":"方案一","link":"#方案一","children":[]},{"level":3,"title":"观察者模式方案","slug":"观察者模式方案","link":"#观察者模式方案","children":[]}]},{"level":2,"title":"原理及应用场景剖析","slug":"原理及应用场景剖析","link":"#原理及应用场景剖析","children":[]},{"level":2,"title":"基于不同应用场景的不同实现方式","slug":"基于不同应用场景的不同实现方式","link":"#基于不同应用场景的不同实现方式","children":[]},{"level":2,"title":"如何实现一个异步非阻塞的EventBus框架？","slug":"如何实现一个异步非阻塞的eventbus框架","link":"#如何实现一个异步非阻塞的eventbus框架","children":[{"level":3,"title":"异步非阻塞观察者模式的简易实现","slug":"异步非阻塞观察者模式的简易实现","link":"#异步非阻塞观察者模式的简易实现","children":[]},{"level":3,"title":"EventBus 框架功能需求介绍","slug":"eventbus-框架功能需求介绍","link":"#eventbus-框架功能需求介绍","children":[]},{"level":3,"title":"手把手实现一个 EventBus 框架","slug":"手把手实现一个-eventbus-框架","link":"#手把手实现一个-eventbus-框架","children":[]}]},{"level":2,"title":"模板模式的原理与实现","slug":"模板模式的原理与实现","link":"#模板模式的原理与实现","children":[]},{"level":2,"title":"Demo案例-制作豆浆","slug":"demo案例-制作豆浆","link":"#demo案例-制作豆浆","children":[{"level":3,"title":"SoyaMilk【抽象类】","slug":"soyamilk【抽象类】","link":"#soyamilk【抽象类】","children":[]},{"level":3,"title":"RedBeanSoyaMilk","slug":"redbeansoyamilk","link":"#redbeansoyamilk","children":[]},{"level":3,"title":"PureSoyaMilk","slug":"puresoyamilk","link":"#puresoyamilk","children":[]},{"level":3,"title":"PeanutSoyaMilk","slug":"peanutsoyamilk","link":"#peanutsoyamilk","children":[]},{"level":3,"title":"Client","slug":"client-2","link":"#client-2","children":[]}]},{"level":2,"title":"模板模式作用一：复用","slug":"模板模式作用一-复用","link":"#模板模式作用一-复用","children":[{"level":3,"title":"Java InputStream","slug":"java-inputstream","link":"#java-inputstream","children":[]},{"level":3,"title":"Java AbstractList","slug":"java-abstractlist","link":"#java-abstractlist","children":[]}]},{"level":2,"title":"模板模式作用二：扩展","slug":"模板模式作用二-扩展","link":"#模板模式作用二-扩展","children":[{"level":3,"title":"Java Servlet","slug":"java-servlet","link":"#java-servlet","children":[]},{"level":3,"title":"JUnit TestCase","slug":"junit-testcase","link":"#junit-testcase","children":[]}]},{"level":2,"title":"回调的原理解析","slug":"回调的原理解析","link":"#回调的原理解析","children":[{"level":3,"title":"应用举例一：JdbcTemplate","slug":"应用举例一-jdbctemplate","link":"#应用举例一-jdbctemplate","children":[]},{"level":3,"title":"应用举例二：setClickListener(）","slug":"应用举例二-setclicklistener","link":"#应用举例二-setclicklistener","children":[]},{"level":3,"title":"应用举例三：addShutdownHook()","slug":"应用举例三-addshutdownhook","link":"#应用举例三-addshutdownhook","children":[]}]},{"level":2,"title":"模板模式 VS 回调","slug":"模板模式-vs-回调","link":"#模板模式-vs-回调","children":[]}],"git":{},"filePathRelative":"JavaYouth/design_patterns/设计模式-05.01-行为型-观察者&模板.md"}');export{e as data};
