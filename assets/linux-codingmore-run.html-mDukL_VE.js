import{_ as d,r,o as p,c,a as n,b as e,d as i,w as o,e as s}from"./app-GjP6hEVt.js";const l="/code-note-page1/assets/image-269-4qa5kD-S.png",m="/code-note-page1/assets/image-270-aTQRg1eo.png",g="/code-note-page1/assets/image-271-HS51EEnk.png",_="/code-note-page1/assets/image-272-VKfmn55w.png",v="/code-note-page1/assets/image-273-vVrPjiFp.png",u="/code-note-page1/assets/image-274-PEfRn7Ok.png",h="/code-note-page1/assets/image-275-sQwj95Yi.png",b="/code-note-page1/assets/image-276-jw2_xiL9.png",x="/code-note-page1/assets/image-277-ckmNP5_m.png",w="/code-note-page1/assets/image-278-se2AX2Au.png",A="/code-note-page1/assets/image-279-E9ugCNQQ.png",f="/code-note-page1/assets/image-280-7sgsD-Ol.png",y="/code-note-page1/assets/image-281-Fn8ms4KD.png",N="/code-note-page1/assets/image-282-8OjsV3Sk.png",P="/code-note-page1/assets/image-283-zTFUQJnJ.png",S="/code-note-page1/assets/image-284-4fu_Vw1P.png",k="/code-note-page1/assets/image-285-tUIyrWlA.png",F="/code-note-page1/assets/image-286-uOqETuQA.png",j="/code-note-page1/assets/image-287-_2NKBmjE.png",J="/code-note-page1/assets/image-288-R7Wdj-Wk.png",T="/code-note-page1/assets/image-289-3dHhn6Md.png",B="/code-note-page1/assets/image-290-ejpEfFJs.png",E="/code-note-page1/assets/image-291-WoB88WWF.png",O="/code-note-page1/assets/image-292-dIfv8sJM.png",K="/code-note-page1/assets/image-293-ADWJ15Zt.png",V="/code-note-page1/assets/image-294-xGyNKRuN.png",R="/code-note-page1/assets/image-295-J9vZxxeS.png",H="/code-note-page1/assets/image-296-upoF1IoP.png",Q="/code-note-page1/assets/image-297-adJ0mi0R.png",U="/code-note-page1/assets/image-298-64pu0djb.png",D="/code-note-page1/assets/image-299-U_4PStoG.png",I="/code-note-page1/assets/image-300-890Ku3OM.png",L="/code-note-page1/assets/image-301-ittnOe9u.png",q="/code-note-page1/assets/image-302-lwUA2Ukj.png",M="/code-note-page1/assets/image-303-aDmXeQJ3.png",W="/code-note-page1/assets/image-304-nNJzP2E7.png",$="/code-note-page1/assets/image-305-HPlGLsAv.png",C="/code-note-page1/assets/image-306-FtAlmFAE.png",X="/code-note-page1/assets/image-307-UjntleOj.png",G="/code-note-page1/assets/image-308-cgwZeF_-.png",z="/code-note-page1/assets/image-309-USUF4VOF.png",Y="/code-note-page1/assets/image-310-GQJr5AYu.png",Z="/code-note-page1/assets/image-311-_YvAbLYz.png",ee="/code-note-page1/assets/image-312-rpa4Un8d.png",ne="/code-note-page1/assets/image-313-8-d2Db2r.png",ie="/code-note-page1/assets/image-314-h5q9oVU6.png",te="/code-note-page1/assets/image-315-yb3lcTdf.png",se="/code-note-page1/assets/image-316-QwBtb2RR.png",ae={},oe=n("h2",{id:"云服务器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#云服务器","aria-hidden":"true"},"#"),e(" 云服务器")],-1),re=s('<p>这是从宝塔面板首页看到的服务器配置详情。</p><p><img src="'+l+'" alt="Alt text"></p><p>马上 618 了，阿里云服务器也开始整活了，需要白嫖的小伙伴可以先加群。</p><p><img src="'+m+'" alt="Alt text"></p><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql" aria-hidden="true">#</a> MySQL</h2><p>登录宝塔面板，点击「数据库」→「添加数据库」，填写数据库名，宝塔面板会自动帮我们创建一个和数据库同名的账号，注意访问权限选择「本地服务器」。</p><p><img src="'+g+'" alt="Alt text"></p><p>在 codingmore 栏目中点击「导入」「从本地上传」编程喵的数据库文件。上传完成后点击导入。</p><p><img src="'+_+'" alt="Alt text"></p><p>DB 文件放在 coding-more/doc 目录下。</p><p><img src="'+v+'" alt="Alt text"></p><p>建议先做一次备份，点击「无备份」「备份」就可以将我们的数据库文件备份下来了，如果后面想恢复的话，直接点击「恢复」就可以了。</p><p><img src="'+u+'" alt="Alt text"></p><p>记住用户名，并复制密码，然后在数据库条目中点击「管理」</p><p><img src="'+h+'" alt="Alt text"></p><p>填写用户名和密码后，点击执行。</p><p><img src="'+b+'" alt="Alt text"></p><p>就可以看到编程喵的数据库文件了。</p><p><img src="'+x+'" alt="Alt text"></p><h2 id="nginx" tabindex="-1"><a class="header-anchor" href="#nginx" aria-hidden="true">#</a> Nginx</h2>',20),de=s('<p>宝塔面板中安装 Nginx 比较简单，直接在软件商店中搜「Nginx」就可以点击安装了。</p><p><img src="'+w+'" alt="Alt text"></p><h2 id="redis" tabindex="-1"><a class="header-anchor" href="#redis" aria-hidden="true">#</a> Redis</h2><p>宝塔面板中安装 Redis 也比较简单，直接在软件商店中搜「Redis」就可以点击安装了。</p><p><img src="'+A+'" alt="Alt text"></p><h2 id="项目打包" tabindex="-1"><a class="header-anchor" href="#项目打包" aria-hidden="true">#</a> 项目打包</h2><h3 id="_1-codingmore-admin" tabindex="-1"><a class="header-anchor" href="#_1-codingmore-admin" aria-hidden="true">#</a> 1）codingmore-admin</h3><p>编程喵的管理后端，注意修改生产环境下的 MySQL 用户名和密码，在 application-prod.yml 文件中。</p><p><img src="'+f+'" alt="Alt text"></p><p>然后把 application.yml 文件中的 active 修改为 prod 生产环境。</p><p><img src="'+y+'" alt="Alt text"></p><p>替换 OSS 配置。</p><p><img src="'+N+'" alt="Alt text"></p><h3 id="_2-codingmore-web" tabindex="-1"><a class="header-anchor" href="#_2-codingmore-web" aria-hidden="true">#</a> 2）codingmore-web</h3><p>编程喵的 Web 前端（网站门户、文章展示/文章详情等），注意修改生产环境下的 MySQL 用户名和密码，在 application-prod.yml 文件中。</p><p><img src="'+P+'" alt="Alt text"></p><p>然后把 application.yml 文件中的 active 修改为 prod 生产环境。</p><p><img src="'+S+'" alt="Alt text"></p><p>然后就可以双击 Maven 的 package 打包了。</p><p><img src="'+k+'" alt="Alt text"></p><h3 id="_3-codingmore-admin-web" tabindex="-1"><a class="header-anchor" href="#_3-codingmore-admin-web" aria-hidden="true">#</a> 3）codingmore-admin-web</h3><p>admin 管理端的前端界面。在 Visual Studio Code 中，现在终端中执行 <code>yarn install</code> 安装项目的依赖插件。</p><p><img src="'+F+'" alt="Alt text"></p><p>再执行 <code>yarn run build</code> 就可以构建 codingmore-admin-web 的静态页面了。</p><p><img src="'+j+'" alt="Alt text"></p><p>会在项目的根目录中生成一个 dist 目录，里面就是打包好的管理端静态页面。</p><p><img src="'+J+'" alt="Alt text"></p><p>打包的时候有两个要点要补充下，在 config 目录下有三个配置文件，dev.env.js 是开发环境下的一些配置，index.js 是主配置，prod.env.js 是生产环境下的配置。</p><p>为了提高网站的性能，我们需要关闭 source map，设置 <code>productionSourceMap: false</code>，同时开启 js 和 css 的文件压缩功能。</p><p><img src="'+T+'" alt="Alt text"></p><p>这样打包后的文件大小就会小很多，放到服务器上也能减少网络请求的响应时间。</p><p>可以看得出，最大的一个 js 文件为 3.7M，压缩版只有 662kb，体积缩小了五倍。</p><p><img src="'+B+'" alt="Alt text"></p><h2 id="将打包好的文件上传到服务器" tabindex="-1"><a class="header-anchor" href="#将打包好的文件上传到服务器" aria-hidden="true">#</a> 将打包好的文件上传到服务器</h2><p>在宝塔面板中点击「FTP」「添加 FTP」。</p><p><img src="'+E+'" alt="Alt text"></p><p>点击「根目录」</p><p><img src="'+O+'" alt="Alt text"></p><p>跳转到文件页。</p><p><img src="'+K+'" alt="Alt text"></p><p>点击上传，在 target 目录下选择上传的两个 jar 包，admin 和 web。</p><p><img src="'+V+'" alt="Alt text"></p><p>点击「开始上传」</p><p><img src="'+R+'" alt="Alt text"></p><p>还有 codingmore-admin-web 的静态文件。</p><p><img src="'+H+'" alt="Alt text"></p><h2 id="一键部署" tabindex="-1"><a class="header-anchor" href="#一键部署" aria-hidden="true">#</a> 一键部署</h2><p>在软件商店里搜「<strong>Java</strong>」关键字，可以看到一个「<strong>Java 项目一键部署 3.5</strong>」的插件，安装它。</p><p><img src="'+Q+'" alt="Alt text"></p><p>进入「Java 项目一键部署」面板。</p><p><img src="'+U+'" alt="Alt text"></p><p>可以在「容器管理」面板中选择 Tomcat 8 安装下，如果没有安装 JDK，在安装 Tomcat 8 的时候会默认安装一个 JDK 1.8。</p><p><img src="'+D+'" alt="Alt text"></p><p>进入 Spring Boot 面板，点击「添加项目」，点击「项目路径」右侧的文件夹图标，就可以上传部署我们的 Spring Boot 项目了。</p><p><img src="'+I+'" alt="Alt text"></p><h3 id="codingmore-web-网站前端" tabindex="-1"><a class="header-anchor" href="#codingmore-web-网站前端" aria-hidden="true">#</a> codingmore-web（网站前端）</h3><p>先选择 codingmore-web。</p><p><img src="'+L+'" alt="Alt text"></p><p>填写域名（编程喵的域名为 <a href="codingmore.top">codingmore.top</a>），修改端口号为 8081，application.yml 文件中定义的。</p><p><img src="'+q+'" alt="Alt text"></p><p>点击确定。</p><p><img src="'+M+'" alt="Alt text"></p><p>可以看到服务已经在启动了，点「日志」看一下。</p><p><img src="'+W+'" alt="Alt text"></p><p>没问题。</p><p>也可以在这个路径下使用终端工具看日志。</p><p><img src="'+$+'" alt="Alt text"></p><p>在安全面板里确认一下 8081 端口是否放开。</p><p><img src="'+C+'" alt="Alt text"></p><p>确认放开后，打开 Chrome 浏览器的无痕模式，输入 IP+端口号。</p><p><img src="'+X+'" alt="Alt text"></p><p>通过域名+端口号的形式也可以访问到。</p><p><img src="'+G+'" alt="Alt text"></p><h3 id="codingmore-admin-网站管理端" tabindex="-1"><a class="header-anchor" href="#codingmore-admin-网站管理端" aria-hidden="true">#</a> codingmore-admin（网站管理端）</h3><p>再次进入 「Java 项目一键部署」Spring Boot 面板中，添加 codingmore-admin 项目。</p><p><img src="'+z+'" alt="Alt text"></p><p>稍等片刻，来看一下日志。</p><p><img src="'+Y+'" alt="Alt text"></p><p>启动没问题。</p><p>codingmore-admin 只是一个后端服务，界面是用 vue 完成的，所以我们此时可以通过 Swagger 来确认一下接口是否可以正常访问。</p><p>先放行 9002 端口。</p><p><img src="'+Z+'" alt="Alt text"></p><p>在浏览器地址栏里输入 <code>http://www.codingmore.top:9002/doc.html</code>，可以看到我们用 Knife4j+Swagger 生成的 API 文档接口。</p><p><img src="'+ee+'" alt="Alt text"></p><p>OK，这样就可以验证我们的 admin 端服务也正确运行了。</p><p>随后，为了减少服务器被攻击的可能性，我们关掉 9002 的端口。</p><h2 id="nginx-配置" tabindex="-1"><a class="header-anchor" href="#nginx-配置" aria-hidden="true">#</a> Nginx 配置</h2><h3 id="codingmore-web" tabindex="-1"><a class="header-anchor" href="#codingmore-web" aria-hidden="true">#</a> codingmore-web</h3><p>域名+端口号虽然可以访问，但不够优雅，我们想直接访问域名 codingmore.top，该怎么办呢？</p>',89),pe=s(`<p>Nginx 的实现原理是，用 Nginx 监听 80 端口，当有 HTTP 请求到来时，将 HTTP 请求的 HOST 等信息与配置文件进行匹配并转发给对应的端口。</p><p>比如说，当用户访问 codingmore.top 时，Nginx 从配置文件中得知这是一个 HTTP 请求，于是将此请求转发给 8081 端口的应用处理。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>upstream codingmore_web_pool{
    server 127.0.0.1:8081;
}

server {
    listen       80;
    server_name  codingmore.top;
    access_log logs/codingmore_web.log;
    error_log logs/codingmore_web.error;
    
    #将所有请求转发给pool池的应用处理
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://codingmore_web_pool;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这就是所谓的端口转发，由软件统一监听某个域名上的某个端口（一般是80端口），当访问服务器的域名和端口符合要求时，就按照配置转发给指定的 Tomcat 服务器处理。我们常用的 Nginx 也有端口转发功能。</p><p>OK，原理了解完后，我们把这段配置复制到宝塔面板中的 Nginx 配置中。</p><p><img src="`+ne+'" alt="Alt text"></p><p>点击「保存」。</p>',7),ce={href:"http://www.codingmore.top/",target:"_blank",rel:"noopener noreferrer"},le=s('<p><img src="'+ie+`" alt="Alt text"></p><p>既然如此，我们顺带把 8081 端口给关掉，减少一个服务器被攻击的可能性。</p><p>OK，这样我们就完成了 codingmore-web 也就是编程喵🐱前端的服务部署了。</p><h3 id="codingmore-admin-web" tabindex="-1"><a class="header-anchor" href="#codingmore-admin-web" aria-hidden="true">#</a> codingmore-admin-web</h3><p>codingmore-admin-web 打包后的文件是静态的，所以我们只需要在 Nginx 里添加 admin 的配置路径就 OK 了。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>upstream codingmore_web_pool{
    server 127.0.0.1:8081;
}

server {
    listen       80;
    server_name  codingmore.top;
    access_log /home/www/codingmore_web.log;
    error_log /home/www/codingmore_web.error;

    location /admin {
        alias /www/wwwroot/itwanger/dist/; # 根目录
        index index.html;
    }
    
    #将所有请求转发给pool池的应用处理
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://codingmore_web_pool;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),me={href:"http://codingmore.top/admin",target:"_blank",rel:"noopener noreferrer"},ge=n("code",null,"/www/wwwroot/itwanger/dist/",-1),_e=n("p",null,"这里讲一下 root 和 alias 的区别：",-1),ve=n("ul",null,[n("li",null,[e("root：实际访问的地址前缀是 root + 请求的 path路径，即 "),n("code",null,"admin => /www/wwwroot/itwanger/dist/admin")]),n("li",null,[e("alias: 实际访问的就是 "),n("code",null,"/www/wwwroot/itwanger/dist")])],-1),ue={href:"http://codingmore.top/admin",target:"_blank",rel:"noopener noreferrer"},he=s('<p><img src="'+te+`" alt="Alt text"></p><p>OK。</p><p>编程喵🐱是一个前后端分离项目，前端的请求如何访问后端的 API 接口呢？简单聊一下。</p><p>打开 codingmore-admin-web/config/prod.env.js 文件，里面有一个 VUE_APP_BASE_API 属性，它的值为 <code>/api</code>，也就意味着前端的请求会发送到 <code>/api</code> 这个前缀路径下。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&#39;use strict&#39;
module.exports = {
  NODE_ENV: &#39;&quot;production&quot;&#39;,
  VUE_APP_BASE_API: &#39;&quot;/api&quot;&#39;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那我们的 codingmore-admin 后端服务是跑在 9002 端口下的，这就意味着，我们需要在 Nginx 中增加一个路径，将 api 前缀的请求转发到 9002 下。</p><p>OK，来看一下完整的配置内容。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>upstream codingmore_web_pool{
    server 127.0.0.1:8081;
}

upstream codingmore_admin_pool{
    server 127.0.0.1:9002/;
}

server {
    listen       80;
    server_name  codingmore.top;
    access_log /home/www/codingmore_web.log;
    error_log /home/www/codingmore_web.error;

    location /admin {
        alias /www/wwwroot/itwanger/dist/; # 根目录
        index index.html;
    }

    location /api/ {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://codingmore_admin_pool;
    }
    
    #将所有请求转发给pool池的应用处理
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://codingmore_web_pool;
    }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ok，登录 admin 端，可以看到我们的文章管理页面了。</p><p><img src="`+se+'" alt="Alt text"></p><h2 id="网站域名" tabindex="-1"><a class="header-anchor" href="#网站域名" aria-hidden="true">#</a> 网站域名</h2>',11),be={href:"http://www.codingmore.top/admin/",target:"_blank",rel:"noopener noreferrer"},xe={href:"http://www.codingmore.top/admin",target:"_blank",rel:"noopener noreferrer"};function we(Ae,fe){const a=r("RouterLink"),t=r("ExternalLinkIcon");return p(),c("div",null,[oe,n("p",null,[e("我们需要一台云服务器，我之前白嫖过一台丐版的，1 核1G 内存，并且已经安装了宝塔面板（安装教程戳"),i(a,{to:"/toBeBetterJavaer/szjy/install-baota-mianban.html"},{default:o(()=>[e("链接🔗")]),_:1}),e("）。")]),re,n("p",null,[i(a,{to:"/toBeBetterJavaer/nginx/nginx.html"},{default:o(()=>[e("Nginx")]),_:1}),e(" 是一个高性能的 HTTP 和反向代理 Web 服务器，基本上就变成了一个服务器必须安装的前置条件之一。")]),de,n("p",null,[e("可以使用 "),i(a,{to:"/toBeBetterJavaer/nginx/nginx.html"},{default:o(()=>[e("Nginx")]),_:1}),e(" 进行端口转发。")]),pe,n("p",null,[e("再在浏览器中访问 "),n("a",ce,[e("codingmore.top"),i(t)]),e(" 就可以请求到内容了。")]),le,n("p",null,[e("我们在 server 中增加了一个 admin 的 location，也就是说，当我们访问 "),n("a",me,[e("codingmore.top/admin"),i(t)]),e(" 的时候，就去请求 "),ge,e(" 目录下的静态文件。")]),_e,ve,n("p",null,[e("注意两者的区别。我们来访问下"),n("a",ue,[e("codingmore.top/admin"),i(t)]),e("：")]),he,n("ul",null,[n("li",null,[e("编程喵 web 端："),n("a",be,[e("www.codingmore.top"),i(t)])]),n("li",null,[e("编程喵 admin 端："),n("a",xe,[e("www.codingmore.top/admin"),i(t)])])])])}const Ne=d(ae,[["render",we],["__file","linux-codingmore-run.html.vue"]]);export{Ne as default};
